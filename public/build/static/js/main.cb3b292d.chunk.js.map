{"version":3,"sources":["components/weather/forecast-weather.jsx","components/weather/current-weather.jsx","components/weather/location-header.jsx","components/weather/date-header.jsx","components/tables/tables-container.jsx","components/weather/weather-container.jsx","components/Cards/Cards.jsx","helpers/helpers.js","components/tables/saw-table.jsx","components/tables/cutter-table.jsx","pages/Cut-Dashboard.jsx","components/navigation/nav-links.jsx","components/navigation/navigation.jsx","App.js","index.js"],"names":["ForecastWeather","props","dayOfWeek","icons","rain","snow","sleet","wind","fog","cloudy","thunderstorm","weather","daily","data","map","i","day","Date","time","getDay","icon","high","Math","round","temperatureHigh","low","temperatureLow","className","id","slice","row","key","CurrentWeather","currently","temperature","summary","LocationHeader","fullDate","getMonth","getDate","getFullYear","DateHeader","WeatherContainer","state","loading","fetch","res","json","this","setState","Component","CardRow","totals","jobs","sqft","price","slabCount","slabSqft","slabCost","waste","formatNumber","num","Number","parseFloat","toFixed","addCommas","toString","replace","SawTable","records","hasOwnProperty","e","push","rows","saw","sqFt","slabSqFt","CutterTable","cutter","TablesContainer","cutData","sawData","then","response","ok","Promise","reject","cut","dataSaw","catch","error","console","warn","CutDashboard","NavLinks","to","Navigation","href","src","alt","height","width","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb3b292d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './weather.styles.scss';\r\n\r\nconst ForecastWeather = (props) => {\r\n\tconst dayOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\n\tconst icons = {\r\n\t\t'clear-day': 'fas fa-sun',\r\n\t\t'clear-night': 'far fa-moon',\r\n\t\train: 'fas fa-cloud-rain',\r\n\t\tsnow: 'far fa-snowflake',\r\n\t\tsleet: 'fas fa-cloud-showers-heavy',\r\n\t\twind: 'fas fa-wind',\r\n\t\tfog: 'fas fa-smog',\r\n\t\tcloudy: 'fas fa-cloud',\r\n\t\t'partly-cloudy-day': 'fas fa-cloud-sun',\r\n\t\t'partly-cloudy-night': 'fas fa-cloud-moon',\r\n\t\tthunderstorm: 'fas fa-poo-storm',\r\n\t};\r\n\r\n\tconst forecast = props.daily.data;\r\n\tconst weather = forecast.map((i) => {\r\n\t\treturn {\r\n\t\t\tday: dayOfWeek[new Date(i.time * 1000).getDay()],\r\n\t\t\ticon: icons[i.icon],\r\n\t\t\thigh: `${Math.round(i.temperatureHigh)}°`,\r\n\t\t\tlow: `${Math.round(i.temperatureLow)}°`,\r\n\t\t};\r\n\t});\r\n\r\n\treturn (\r\n\t\t<table className='table table-bordered' id='forecast-table'>\r\n\t\t\t<thead>\r\n\t\t\t\t<tr id='header-row'>\r\n\t\t\t\t\t<th>Day</th>\r\n\t\t\t\t\t<th>Icon</th>\r\n\t\t\t\t\t<th>Hi</th>\r\n\t\t\t\t\t<th>Lo</th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{weather.slice(0, 5).map((row) => (\r\n\t\t\t\t\t<tr key={row.day}>\r\n\t\t\t\t\t\t<td>{row.day}</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<i className={row.icon}></i>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>{row.high}</td>\r\n\t\t\t\t\t\t<td>{row.low}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t))}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t);\r\n};\r\n\r\nexport default ForecastWeather;\r\n","import React from 'react';\r\n\r\nimport './weather.styles.scss';\r\n\r\nconst icons = {\r\n\t'clear-day': 'fas fa-sun',\r\n\t'clear-night': 'far fa-moon',\r\n\train: 'fas fa-cloud-rain',\r\n\tsnow: 'far fa-snowflake',\r\n\tsleet: 'fas fa-cloud-showers-heavy',\r\n\twind: 'fas fa-wind',\r\n\tfog: 'fas fa-smog',\r\n\tcloudy: 'fas fa-cloud',\r\n\t'partly-cloudy-day': 'fas fa-cloud-sun',\r\n\t'partly-cloudy-night': 'fas fa-cloud-moon',\r\n\tthunderstorm: 'fas fa-poo-storm',\r\n};\r\n\r\nconst CurrentWeather = (props) => {\r\n\treturn (\r\n\t\t<div className='row'>\r\n\t\t\t<div className='col-4' id='current-temp'>\r\n\t\t\t\t{`${Math.round(props.currently.temperature)}°`}\r\n\t\t\t</div>\r\n\t\t\t<div className='col-4' id='current-icon'>\r\n\t\t\t\t<i className={`${icons[props.currently.icon]} fa-2x`}></i>\r\n\t\t\t</div>\r\n\t\t\t<div className='col-4' id='current-summary'>\r\n\t\t\t\t{props.currently.summary}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CurrentWeather;\r\n","import React from 'react'\r\n\r\nimport './weather.styles.scss';\r\n\r\nexport default function LocationHeader() {\r\n    return (\r\n        <div className=\"card-header col-12\" id=\"weather-header\">\r\n            King Of Prussia\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport './weather.styles.scss';\r\n\r\nconst dayOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\nconst months = [\r\n\t'January',\r\n\t'February',\r\n\t'March',\r\n\t'April',\r\n\t'May',\r\n\t'June',\r\n\t'July',\r\n\t'August',\r\n\t'September',\r\n\t'October',\r\n\t'November',\r\n\t'December',\r\n];\r\n\r\nconst fullDate =\r\n\tdayOfWeek[new Date().getDay()] +\r\n\t' ' +\r\n\tmonths[new Date().getMonth()] +\r\n\t' ' +\r\n\tnew Date().getDate() +\r\n\t', ' +\r\n\tnew Date().getFullYear();\r\n\r\nexport default function DateHeader() {\r\n\treturn (\r\n\t\t<div className='col-12' id='date-header'>\r\n\t\t\t{fullDate}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { Component } from 'react';\r\nimport SawTable from './saw-table';\r\nimport CutterTable from './cutter-table';\r\n\r\nimport './tables.styles.scss';\r\n\r\nlet data;\r\n\r\nexport default class TablesContainer extends Component {\r\n\tstate = {\r\n\t\tloading: true,\r\n\t\tcutData: [],\r\n\t\tsawData: [],\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tfetch('/api/cutter')\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.ok) {\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn Promise.reject(response);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then((cut) => {\r\n\t\t\t\t// Store the post data to a variable\r\n\t\t\t\tdata = cut;\r\n\t\t\t\t// Fetch another API\r\n\t\t\t\treturn fetch('/api/saw');\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.ok) {\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn Promise.reject(response);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then((dataSaw) => {\r\n\t\t\t\tthis.setState({ cutData: data, sawData: dataSaw, loading: false });\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.warn(error);\r\n\t\t\t});\r\n\t}\r\n\trender() {\r\n\t\tif (this.state.loading) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='col-9' id='loading'>\r\n\t\t\t\t\tLoading...\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\tconst { cutData, sawData } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className='col-9' id='table-container'>\r\n\t\t\t\t<div className='row' id='table-row'>\r\n\t\t\t\t\t<SawTable data={sawData} />\r\n\t\t\t\t\t<CutterTable data={cutData} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport ForecastWeather from './forecast-weather';\r\nimport CurrentWeather from './current-weather';\r\nimport LocationHeader from './location-header';\r\nimport DateHeader from './date-header';\r\nimport './weather.styles.scss';\r\n\r\nclass WeatherContainer extends Component {\r\n\tstate = {\r\n\t\tloading: true,\r\n\t\tweather: [],\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst res = await fetch('http://localhost:4000/api/weather');\r\n\t\tconst data = await res.json();\r\n\t\tthis.setState({ weather: data, loading: false });\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.loading) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t}\r\n\t\tconst { weather } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className='col-3' id='weather-container'>\r\n\t\t\t\t<div className='card-front active col-12'>\r\n\t\t\t\t\t<LocationHeader />\r\n\t\t\t\t\t<DateHeader />\r\n\t\t\t\t\t<div className='col-12' id='weather-body'>\r\n\t\t\t\t\t\t<CurrentWeather currently={weather.currently} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ForecastWeather daily={weather.daily} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default WeatherContainer;\r\n","import React, { Component } from 'react';\r\nimport './Cards.styles.scss';\r\n\r\nexport default class CardRow extends Component {\r\n\tstate = {\r\n\t\tloading: true,\r\n\t\ttotals: [],\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst res = await fetch('/api/shop');\r\n\t\tconst data = await res.json();\r\n\t\tthis.setState({ totals: data[0], loading: false });\r\n\t}\r\n\trender() {\r\n\t\tconst { totals, loading } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className='card-container'>\r\n\t\t\t\t<div className='card-deck'>\r\n\t\t\t\t\t<div className='card bg-light mb-3'>\r\n\t\t\t\t\t\t<div className='card-header'>Line Items Cut</div>\r\n\t\t\t\t\t\t<div className='card-body'>\r\n\t\t\t\t\t\t\t<p className='card-text' id='line-items'>\r\n\t\t\t\t\t\t\t\t{loading ? 'Loading...' : totals.jobs}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='card bg-light mb-3'>\r\n\t\t\t\t\t\t<div className='card-header'>SqFt Cut</div>\r\n\t\t\t\t\t\t<div className='card-body'>\r\n\t\t\t\t\t\t\t<p className='card-text' id='sqft'>\r\n\t\t\t\t\t\t\t\t{loading ? 'Loading...' : totals.sqft}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='card bg-light mb-3'>\r\n\t\t\t\t\t\t<div className='card-header'>Total Price</div>\r\n\t\t\t\t\t\t<div className='card-body'>\r\n\t\t\t\t\t\t\t<p className='card-text' id='price'>\r\n\t\t\t\t\t\t\t\t{loading ? 'Loading...' : `$${totals.price}`}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='card bg-light mb-3'>\r\n\t\t\t\t\t\t<div className='card-header'>Slabs Used</div>\r\n\t\t\t\t\t\t<div className='card-body'>\r\n\t\t\t\t\t\t\t<p className='card-text' id='slab-count'>\r\n\t\t\t\t\t\t\t\t{loading ? 'Loading...' : totals.slabCount}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='card bg-light mb-3'>\r\n\t\t\t\t\t\t<div className='card-header'>Slab SqFt</div>\r\n\t\t\t\t\t\t<div className='card-body'>\r\n\t\t\t\t\t\t\t<p className='card-text' id='slab-sqft'>\r\n\t\t\t\t\t\t\t\t{loading ? 'Loading...' : totals.slabSqft}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='card bg-light mb-3'>\r\n\t\t\t\t\t\t<div className='card-header'>Slab Cost</div>\r\n\t\t\t\t\t\t<div className='card-body'>\r\n\t\t\t\t\t\t\t<p className='card-text' id='slab-cost'>\r\n\t\t\t\t\t\t\t\t{loading ? 'Loading...' : `$${totals.slabCost}`}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='card bg-light mb-3'>\r\n\t\t\t\t\t\t<div className='card-header'>Waste Percentage</div>\r\n\t\t\t\t\t\t<div className='card-body'>\r\n\t\t\t\t\t\t\t<p className='card-text' id='waste'>\r\n\t\t\t\t\t\t\t\t{loading\r\n\t\t\t\t\t\t\t\t\t? 'Loading...'\r\n\t\t\t\t\t\t\t\t\t: totals.waste > 0\r\n\t\t\t\t\t\t\t\t\t? `${totals.waste} %`\r\n\t\t\t\t\t\t\t\t\t: '0%'}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","const formatNumber = (num) => {\r\n\treturn Number.parseFloat(num).toFixed(2);\r\n};\r\n\r\nconst addCommas = (num) => {\r\n\treturn num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n};\r\n\r\nexport { addCommas, formatNumber };\r\n","import React from 'react';\r\n\r\nimport './tables.styles.scss';\r\nimport { addCommas, formatNumber } from '../../helpers/helpers';\r\n\r\nconst SawTable = (props) => {\r\n\tconst data = props.data;\r\n\tlet records = [];\r\n\tfor (const key in data) {\r\n\t\tif (data.hasOwnProperty(key)) {\r\n\t\t\tconst e = data[key];\r\n\t\t\trecords.push(e);\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div className='table-responsive' id='saw-table-container'>\r\n\t\t\t<table className='table table-striped table-bordered' id='saw-table'>\r\n\t\t\t\t<thead className='table-header'>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th id='saw'>Saw</th>\r\n\t\t\t\t\t\t<th>Jobs</th>\r\n\t\t\t\t\t\t<th>SqFt</th>\r\n\t\t\t\t\t\t<th>Job Price</th>\r\n\t\t\t\t\t\t<th>Slabs</th>\r\n\t\t\t\t\t\t<th>Slab SqFt</th>\r\n\t\t\t\t\t\t<th>Slab Cost</th>\r\n\t\t\t\t\t\t<th>Waste</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{records.map((rows) => (\r\n\t\t\t\t\t\t<tr key={rows.saw}>\r\n\t\t\t\t\t\t\t<td id='saw-row-header'>{rows.saw}</td>\r\n\t\t\t\t\t\t\t<td>{rows.jobs ? rows.jobs : 0}</td>\r\n\t\t\t\t\t\t\t<td>{rows.sqFt ? addCommas(formatNumber(rows.sqFt)) : 0}</td>\r\n\t\t\t\t\t\t\t<td>{rows.price ? `$${addCommas(formatNumber(rows.price))}` : 0}</td>\r\n\t\t\t\t\t\t\t<td>{rows.slabCount ? rows.slabCount : 0}</td>\r\n\t\t\t\t\t\t\t<td>{rows.slabSqFt ? formatNumber(rows.slabSqFt) : 0}</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t{rows.slabCost ? `$${addCommas(formatNumber(rows.slabCost))}` : 0}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t{rows.slabSqFt > rows.sqFt\r\n\t\t\t\t\t\t\t\t\t? `${formatNumber(\r\n\t\t\t\t\t\t\t\t\t\t\t((rows.slabSqFt - rows.sqFt) / rows.slabSqFt) * 100\r\n\t\t\t\t\t\t\t\t\t  )}%`\r\n\t\t\t\t\t\t\t\t\t: '0%'}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SawTable;\r\n","import React from 'react';\r\n\r\nimport './tables.styles.scss';\r\nimport { addCommas, formatNumber } from '../../helpers/helpers';\r\n\r\nexport default function CutterTable(props) {\r\n\tconst data = props.data;\r\n\tlet records = [];\r\n\tfor (const key in data) {\r\n\t\tif (data.hasOwnProperty(key)) {\r\n\t\t\tconst e = data[key];\r\n\t\t\trecords.push(e);\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div className='table-responsive' id='cutter-table-container'>\r\n\t\t\t<table className='table table-striped table-bordered' id='cutter-table'>\r\n\t\t\t\t<thead className='table-header'>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th id='cutter'>Cutter</th>\r\n\t\t\t\t\t\t<th>Jobs</th>\r\n\t\t\t\t\t\t<th>SqFt</th>\r\n\t\t\t\t\t\t<th>Job Price</th>\r\n\t\t\t\t\t\t<th>Slabs</th>\r\n\t\t\t\t\t\t<th>Slab SqFt</th>\r\n\t\t\t\t\t\t<th>Slab Cost</th>\r\n\t\t\t\t\t\t<th>Waste</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{records.map((rows) => (\r\n\t\t\t\t\t\t<tr key={rows.cutter}>\r\n\t\t\t\t\t\t\t<td id='cut-row-header'>{rows.cutter}</td>\r\n\t\t\t\t\t\t\t<td>{rows.jobs ? rows.jobs : 0}</td>\r\n\t\t\t\t\t\t\t<td>{rows.sqFt ? addCommas(formatNumber(rows.sqFt)) : 0}</td>\r\n\t\t\t\t\t\t\t<td>{rows.price ? `$${addCommas(formatNumber(rows.price))}` : 0}</td>\r\n\t\t\t\t\t\t\t<td>{rows.slabCount ? rows.slabCount : 0}</td>\r\n\t\t\t\t\t\t\t<td>{rows.slabSqFt ? formatNumber(rows.slabSqFt) : 0}</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t{rows.slabCost ? `$${addCommas(formatNumber(rows.slabCost))}` : 0}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t{rows.slabSqFt > rows.sqFt\r\n\t\t\t\t\t\t\t\t\t? `${formatNumber(\r\n\t\t\t\t\t\t\t\t\t\t\t((rows.slabSqFt - rows.sqFt) / rows.slabSqFt) * 100\r\n\t\t\t\t\t\t\t\t\t  )}%`\r\n\t\t\t\t\t\t\t\t\t: '0%'}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\n\r\nimport WeatherContainer from '../components/weather/weather-container';\r\nimport CardRow from '../components/Cards/Cards';\r\nimport TablesContainer from '../components/tables/tables-container';\r\n\r\nconst CutDashboard = () => {\r\n\treturn (\r\n\t\t<div className='container-fluid' id='main-container'>\r\n\t\t\t<CardRow />\r\n\t\t\t<div className='weather-tables-container'>\r\n\t\t\t\t<div className='row' id='weather-tables-row'>\r\n\t\t\t\t\t<WeatherContainer />\r\n\t\t\t\t\t<TablesContainer />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CutDashboard;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NavLinks = () => {\r\n\treturn (\r\n\t\t<div className='collapse navbar-collapse justify-content-end' id='navbarNav'>\r\n\t\t\t<ul className='navbar-nav'>\r\n\t\t\t\t<li className='nav-item'>\r\n\t\t\t\t\t<NavLink to='/cutdashboard' className='nav-link'>\r\n\t\t\t\t\t\tCut Data\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NavLinks;\r\n","import React, { Component } from 'react';\r\n\r\nimport NavLinks from './nav-links';\r\n\r\nexport default class Navigation extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<nav className='navbar navbar-expand-lg navbar-dark bg-dark' id='nav-main'>\r\n\t\t\t\t<a className='navbar-brand' href='/'>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={process.env.PUBLIC_URL + '/images/logoCthumb.png'}\r\n\t\t\t\t\t\talt='CMG'\r\n\t\t\t\t\t\theight='50px'\r\n\t\t\t\t\t\twidth='60px'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</a>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName='navbar-toggler'\r\n\t\t\t\t\ttype='button'\r\n\t\t\t\t\tdata-toggle='collapse'\r\n\t\t\t\t\tdata-target='#navbarNav'\r\n\t\t\t\t\taria-controls='navbarNav'\r\n\t\t\t\t\taria-expanded='false'\r\n\t\t\t\t\taria-label='Toggle navigation'\r\n\t\t\t\t>\r\n\t\t\t\t\t<span className='navbar-toggler-icon'></span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<NavLinks />\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport './App.css';\n\nimport CutDashboard from './pages/Cut-Dashboard';\nimport Navigation from './components/navigation/navigation';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Navigation />\n\t\t\t<Switch>\n\t\t\t\t<Route exact path='/' component={CutDashboard} />\n\t\t\t</Switch>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}